% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flextpc_2024.R
\name{flextpc_2024}
\alias{flextpc_2024}
\title{flexTPC model for fitting thermal performance curves}
\usage{
flextpc_2024(temp, tmin, tmax, rmax, alpha, beta)
}
\arguments{
\item{temp}{temperature in degrees centigrade}

\item{tmin}{low temperature (ºC) at which rates become negative}

\item{tmax}{high temperature (ºC) at which rates become negative}

\item{rmax}{maximum performance/value of the trait}

\item{alpha}{shape parameter to adjust the asymmetry and direction of skew of the curve}

\item{beta}{shape parameter to adjust the breadth of the curve}
}
\value{
a numeric vector of rate values based on the temperatures and parameter values provided to the function
}
\description{
flexTPC model for fitting thermal performance curves
}
\details{
Equation:
\deqn{rate=r_{\text{max}}\left[\left(\frac{T - T_{\text{min}}}{\alpha}\right)^\alpha\left(\frac{T_{\text{max}}-T}{1-\alpha}\right)^{1-\alpha}\left(\frac{1}{T_{\text{max}}-T_{\text{min}}}\right)\right]^{\frac{\alpha(1-\alpha)}{\beta^2}}}{%
rate = rmax[((temp-tmin)/alpha)^alpha ((tmax-temp)/(1-alpha))^(1-alpha)(1/(tmax-tmin))]^((alpha(1-alpha))/beta^2)}

Start values in \code{get_start_vals} are derived from the data or sensible values from the literature.

Limits in \code{get_lower_lims} and \code{get_upper_lims} are derived from the data or based extreme values that are unlikely to occur in ecological settings.
}
\note{
Generally this model requires larger iter values in nls_multstart to fit reliably.
}
\examples{
# load in ggplot
library(ggplot2)

# subset for the first TPC curve
data('chlorella_tpc')
d <- subset(chlorella_tpc, curve_id == 1)

# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'flextpc_2024')
# fit model
mod <- nls.multstart::nls_multstart(rate~flextpc_2024(temp = temp, tmin, tmax, rmax, alpha, beta),
data = d,
iter = c(5,5,5,5,5),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'flextpc_2024'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'flextpc_2024'),
supp_errors = 'Y',
convergence_count = FALSE)

# look at model fit
summary(mod)

# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)

# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
}
\references{
Cruz-Loya M, Mordecai EA, Savage VM. A flexible model for thermal performance curves. bioRxiv [Preprint]. 2024
}
\author{
Francis Windram
}
