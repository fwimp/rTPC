% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lobry_1991.R
\name{lobry_1991}
\alias{lobry_1991}
\title{Lobry model for fitting thermal performance curves}
\usage{
lobry_1991(temp, rmax, topt, tmin, tmax)
}
\arguments{
\item{temp}{temperature in degrees centigrade}

\item{rmax}{the maximum rate}

\item{topt}{optimum temperature (ºC) at which rates are maximal}

\item{tmin}{low temperature (ºC) at which rates become negative}

\item{tmax}{high temperature (ºC) at which rates become negative}
}
\value{
a numeric vector of rate values based on the temperatures and parameter values provided to the function
}
\description{
Lobry model for fitting thermal performance curves
}
\details{
Equation:
\deqn{rate = rmax \cdot (1 - \frac{(temp - topt)^2)}{(temp - topt)^2 + temp \cdot (tmax + tmin - temp) - tmax \cdot tmin}}{%
rate = rmax.(1 - (temp - topt)^2/((temp - topt)^2 + temp.(tmax + tmin - temp) - tmax.tmin))}

Start values in \code{get_start_vals} are derived from the data or sensible values from the literature.

Limits in \code{get_lower_lims} and \code{get_upper_lims} are derived from the data or based extreme values that are unlikely to occur in ecological settings.
}
\note{
Generally we found this model easy to fit.
}
\examples{
# load in ggplot
library(ggplot2)

# subset for the first TPC curve
data('chlorella_tpc')
d <- subset(chlorella_tpc, curve_id == 1)

# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'lobry_1991')
# fit model
mod <- nls.multstart::nls_multstart(rate~lobry_1991(temp = temp, rmax, topt, tmin, tmax),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'lobry_1991'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'lobry_1991'),
supp_errors = 'Y',
convergence_count = FALSE)

# look at model fit
summary(mod)

# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)

# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
}
\references{
Lobry, J. R., Rosso, L., & Flandrois, J. P. (1991). A FORTRAN subroutine for the determination of parameter confidence limits in non-linear models. Binary, 3(86-93), 25.
}
\author{
Daniel Padfield
}
